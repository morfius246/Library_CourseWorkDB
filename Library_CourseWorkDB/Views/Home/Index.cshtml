@model Library_CourseWorkDB.Models.Main
@{
    ViewBag.Title = "Home Page";
}


<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery.ui.autocomplete.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<style>
    .book {
        margin: 1%;
        margin-top: 0.5%;
        margin-bottom: 0.5%;
        min-width: 450px;
        width: 76%;
        height: 50%;
        float: left;
        background-color: #F8F8F8;
        border-radius: 10px;
        padding: 30px;
        padding-bottom: 20px;
    }
</style>
<script src="~/Scripts/jquery-ui-1.8.24.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script>
    $(document).ready(function () {
        $("#searchBox").autocomplete({
            delay: 500,
            disabled: true
        });

        $("#searchDropDown").change(function () {
            document.getElementById("searchBox").focus();
            if ($('#searchDropDown').find(':selected').val() != "Author") {
                $("#searchBox").autocomplete({
                    disabled: true
                });
            } else {
                $("#searchBox").autocomplete({
                    disabled: false
                });
            }
        });

        $("[data-autocomplete-source]").each(function () {
            var target = $(this);
            target.autocomplete({ source: target.attr("data-autocomplete-source") });
        });
    });
</script>


<div style="margin: 0 auto">

    <div id="list-group" style="width: 20%; float: left; margin: 1%; margin-top: 0.5%">
        <a class="list-group-item" style="height: 90px">
            @using (Ajax.BeginForm("BookSearch", "Home", new AjaxOptions() { UpdateTargetId = "bodyDiv" }, new { @class = "navbar" }))
            {
                var list = new List<SelectListItem>();
                list.Add(new SelectListItem { Text = "По книзі", Value = "Title" });
                list.Add(new SelectListItem { Text = "По автору", Value = "Author" });
                <input type="text" class = "form-control" id="searchBox" placeholder="Пошук..." autofocus=true name="SearchString" data-autocomplete-source="@Url.Action("AutoCompleteSearch", "Home")"/>
                @Html.DropDownList("SearchBy", list, new { @class = "form-control", @id = "searchDropDown" })
            }
        </a>
        <a href="@Url.Action("Index", "Home")" class="list-group-item" style="height:60px; padding-top:0px">
            <h3>Все</h3>
        </a>

        @foreach (var category in Model.CategoryList)
        {
            <a class="list-group-item" href="@Url.Action("Index", "Home", new { categoryCode = category.Code })">
                <h4>@category.Description</h4>
            </a>
        }
    </div>

    @if (User.IsInRole("Librarian") || User.IsInRole("Admin"))
    {
        <div style="width: 20%; float: left; margin: 1%; margin-top: 0.5%">
            @Html.ActionLink("Додати книгу", "Create", "Book", null, new { @class = "btn btn-default" })
        </div>
    }
    <div id="bodyDiv">
        @foreach (var item in Model.BookList)
        {
            <div class="book">
                <div style="float: right">
                    @Html.ActionLink("Просмотреть книгу", "Details", "Book", new { id = item.ID }, new { @class = "btn btn-success" })
                    <div style="float: right; margin-left: 4px">
                        @if (User.IsInRole("Librarian") || User.IsInRole("Admin"))
                        {
                            @Html.ActionLink(" ", "Edit", "Book", new { id = item.ID }, new { @class = "glyphicon glyphicon-pencil" })
                            <br />
                            @Html.ActionLink(" ", "Delete", "Book", new { id = item.ID }, new { @class = "glyphicon glyphicon-remove" })
                        }
                    </div>
                </div>
                <div style="width: 70%; font-size: large">
                    @Html.DisplayFor(x => item.Name)<br>
                </div>
                <div style="width: 70%">
                    @if (item.AuthorsList != null && item.AuthorsList.Count > 0)
                    {
                        int count = 0;
                        foreach (var author in item.AuthorsList)
                        {
                            <span>@author.GetShortName()</span>
                            count++;
                            if (count < item.AuthorsList.Count)
                            {
                                <span>/</span>
                            }
                        }
                    }
                    else
                    {
                        <span>Немає авторів</span>
                    }
                </div>
                <div style="width: 70%">
                    Рік видання: @Html.DisplayFor(x => item.EditionYear) р.<br>
                </div>

            </div>
        }
    </div>
</div>
