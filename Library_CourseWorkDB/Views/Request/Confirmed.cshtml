@using System.Web.Razor.Parser.SyntaxTree
@using PdfRpt.Core.Helper
@model IEnumerable<Library_CourseWorkDB.Models.ConfirmedRequest>

@{
    ViewBag.Title = "Confirmed";
}

<h2>Видані книги</h2>
<table style="border-collapse: separate; border-spacing: 11px 2px">
    <tr>
        <th>
           @Html.ActionLink(@Html.DisplayNameFor(model => model.Request.BookCopy.Book.Name).ToString(), "Confirmed", new{sort = ViewBag.bookSort})
        </th>
        <th style="width: 100px">
            @Html.ActionLink(@Html.DisplayNameFor(model => model.Request.BookCopy.InventaryNumber).ToString(), "Confirmed", new{sort = ViewBag.inventaryNSort})
        </th>
        <th>
            @Html.ActionLink("Читач", "Confirmed", new{sort = ViewBag.reader})
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.GiveAwayDate).ToString(), "Confirmed", new{sort = ViewBag.giveAwayDateSort})
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.ReturnDate).ToString(), "Confirmed", new{sort = ViewBag.returnDateSort})
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.OverduedDays).ToString(), "Confirmed", new{sort = ViewBag.overduedSort})
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <span>@item.Request.BookCopy.Book.GetShortName()</span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Request.BookCopy.InventaryNumber)
            </td>
            <td>
                <span>@Html.ActionLink(item.Request.ReadingCard.GetShortName(), "Student", "Home", new { id = item.Request.ReadingCard.ID }, null) (@item.Request.ReadingCardID)</span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GiveAwayDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReturnDate)
            </td>
            <td>
                @{
                    int overduedDays = (DateTime.Now - item.ReturnDate).Days;
                    if (overduedDays < 0)
                    {
                        <span style="color: green">@overduedDays д.</span>
                    }
                    else
                    {
                        if (item.Request.RequestType.Name != "read")
                        {
                            <span style="color: orangered">@overduedDays д.</span>
                        }
                        else
                        {
                            <Span> Чит.зал </Span>
                        }
                    }
                   
                }
            </td>
            <td>
                @Html.ActionLink("Закрити", "Close", new { id = item.RequestID })
            </td>
        </tr>
    }

</table>
